plugins {
    alias libs.plugins.android.application
    alias libs.plugins.kotlin.android
    alias libs.plugins.kotlin.kapt
}

android {
    namespace 'dev.thiagosouto.marvelpoc'
    compileSdk 34
    buildToolsVersion '34.0.0'

    defaultConfig {
        applicationId "dev.thiagosouto.marvelpoc"
        minSdkVersion 24
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin/'
        test.java.srcDirs += 'src/test/kotlin/'
        androidTest.java.srcDirs += 'src/androidTest/kotlin/'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion "1.5.5"
    }

    lint {
        // https://github.com/bumptech/glide/issues/4940
        lintConfig = file("$rootDir/android_glide_lint.xml")
    }


    packaging {
        resources {
            excludes += "/META-INF/LICENSE.md"
            excludes += "/META-INF/LICENSE-notice.md"
        }
    }
}

def allTestsConfigs(dependency) {
    dependencies.add('testImplementation', dependency)
    dependencies.add('androidTestImplementation', dependency)
}

dependencies {

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':data-room')
    implementation project(path: ':data-remote')
    implementation project(path: ':domain')
    implementation project(path: ':data')
    implementation project(path: ':design')
    implementation project(path: ':support:presentation')
    implementation platform(libs.android.compose.bom)
    androidTestImplementation enforcedPlatform(libs.android.compose.bom)

    implementation libs.kotlin.std
    implementation libs.kotlin.coroutines.android
    implementation libs.android.appcompat
    implementation libs.android.lifecycle
    implementation libs.android.constraintlayout
    implementation libs.android.material

    implementation libs.glide
    annotationProcessor libs.glide.compiler

    implementation libs.koin

    implementation libs.android.core
    implementation libs.android.lifecycle.viewmodel

    //Compose
    implementation libs.android.compose.activity
    implementation libs.android.compose.coil
    implementation libs.android.compose.layout
    implementation libs.android.compose.material
    implementation libs.android.compose.preview
    implementation libs.android.compose.runtime
    implementation libs.android.compose.animation
    implementation libs.android.compose.graphics
    implementation libs.android.compose.accompanist.pager

    debugImplementation libs.android.compose.preview

    testImplementation libs.test.core.android
    testImplementation libs.test.turbine

    allTestsConfigs libs.test.android.espresso
    allTestsConfigs libs.test.junit
    allTestsConfigs libs.test.kotlin.coroutines
    allTestsConfigs libs.test.truth
    allTestsConfigs libs.test.core
    allTestsConfigs libs.test.core

    androidTestImplementation libs.test.android.compose
    androidTestImplementation libs.test.runner
    androidTestImplementation libs.test.junit.ktx
    androidTestImplementation libs.test.webserver
    androidTestImplementation libs.test.android.compose.robots


    debugImplementation libs.test.android.manifest
    androidTestImplementation libs.test.fragment

    androidTestUtil libs.test.orchestrator
}
